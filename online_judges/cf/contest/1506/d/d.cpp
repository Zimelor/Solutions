/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: mia_ortizma
 * Time: 2021-04-10 13:50:02
**/

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int N_MAX = 2 * 1e5;
int arr[N_MAX];

int main()
{
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  int T;
  cin >> T;
  while (T--)
  {
    int N;
    cin >> N;
    for (int i = 0; i < N; ++i)
    {
      cin >> arr[i];
    }
    sort(arr, arr + N);

    vector<int> cnts;
    cnts.push_back(1);
    int last = arr[0];
    for (int i = 1; i < N; ++i)
    {
      if (arr[i] == last)
      {
        cnts[cnts.size() - 1] += 1;
      }
      else
      {
        cnts.push_back(1);
      }
      last = arr[i];
    }
    priority_queue<int> pq;
    for (auto x : cnts)
    {
      pq.push(x);
    }
    while (pq.size() >= 2)
    {
      int a = pq.top();
      pq.pop();
      int b = pq.top();
      pq.pop();
      a = a - 1;
      b = b - 1;
      if (a)
      {
        pq.push(a);
      }
      if (b)
      {
        pq.push(b);
      }
    }
    int ans = 0;
    while (!pq.empty())
    {
      ans += pq.top();
      pq.pop();
    }

    cout << ans << "\n";
  }
  return 0;
}
