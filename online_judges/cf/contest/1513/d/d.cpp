/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: mia_ortizma
 * Time: 2021-04-11 09:35:02
**/

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int MAX_N = 2 * 1e5 + 10;

int arr[MAX_N];
int group[MAX_N];
int sz[MAX_N];

void setup(int N) {
  for (int i = 0; i <= N; ++i) {
    group[i] = i;
    sz[i] = 1;
  }
}

int id(int i) {
  while (group[i] != i) {
    group[i] = group[group[i]];
    i = group[i];
  }
  return i;
}

bool un(int i, int j) {
  i = id(i), j = id(j);
  if (i == j) return false;
  if (sz[i] < sz[j]) {
    swap(i, j);
  }
  group[j] = i;
  sz[i] = sz[i] + sz[j];
  return true;
}

int main()
{
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  int T;
  cin >> T;
  while (T--)
  {
    int N, P;
    cin >> N >> P;
    vector<pii> nums;

    setup(N);

    for (int i = 0; i < N; ++i)
    {
      cin >> arr[i];
      nums.push_back({ arr[i], i });
    }
    sort(nums.begin(), nums.end());
    ll ans = 0;
    for (auto& par : nums) {
      int val = par.first;
      int pos = par.second;

      if (val > P) continue;
      int g = val;
      int mn = val;
      for (int j = pos - 1; j >= 0; --j) {
        g = __gcd(g, arr[j]);
        mn = min(mn, arr[j]);
        if (g != mn) break;
        if (un(pos, j)) {
          ans += g;
        }
        else {
          break;
        }
      }
      g = val;
      mn = val;
      for (int j = pos + 1; j < N; ++j) {
        g = __gcd(g, arr[j]);
        mn = min(mn, arr[j]);
        if (g != mn) break;
        if (un(pos, j)) {
          ans += g;
        }
        else {
          break;
        }
      }
    }
    for (int i = 0; i < N - 1; ++i) {
      if (un(i, i + 1)) {
        ans += P;
      }
    }

    cout << ans << "\n";
  }
  return 0;
}
