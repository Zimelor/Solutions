/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: mia_ortizma
 * Time: 2021-04-11 09:35:02
**/

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int N_MAX = 2 * 1e5 + 1;
const ll MOD = 1e9 + 7;

ll dp[10][N_MAX + 10];

int main()
{
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  int T;
  cin >> T;

  for (int i = 0; i <= 9; ++i)
  {
    dp[i][0] = 1;
  }
  for (int i = 1; i <= N_MAX; ++i)
  {
    for (int j = 0; j <= 9; ++j)
    {
      if (j < 9)
      {
        dp[j][i] = dp[j + 1][i - 1];
      }
      else
      {
        dp[9][i] = (dp[0][i - 1] + dp[1][i - 1]) % MOD;
      }
    }
  }

  while (T--)
  {
    int N, M;
    cin >> N >> M;
    ll ans = 0;
    //cout << "N:" << N << "\n";
    while (N)
    {
      int digit = N % 10;
      //cout << digit << " ";
      ans = (ans + dp[digit][M]) % MOD;
      N /= 10;
    }
    cout << ans << "\n";
  }
  return 0;
}
