/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: mia_ortizma
 * Time: 2021-05-07 09:35:02
**/

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef tuple<int, int, int, int> tp;

const int MAX_N = 1e5 + 100;
int arr[MAX_N];

bool even(int x) {
  return x % 2 == 0;
}

int main()
{
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  int T;
  cin >> T;
  while (T--) {
    int N;
    cin >> N;
    for (int i = 1; i <= N; ++i) {
      cin >> arr[i];
    }

    int min_p = 1;
    int mn = arr[1];

    for (int i = 1; i <= N; ++i) {
      if (arr[i] < mn) {
        mn = arr[i];
        min_p = i;
      }
    }


    vector<tp> vec;
    if (min_p != 1) {
      vec.push_back({ 1, min_p, mn, mn });
    }
    for (int i = 2; i <= N; ++i) {
      if (even(i)) {
        vec.push_back({ 1, i, mn, mn + 1 });
      }
      else {
        vec.push_back({ 1, i, mn, mn });
      }
    }

    cout << vec.size() << "\n";

    for (auto& x : vec) {
      cout << get<0>(x) << " " << get<1>(x) << " " << get<2>(x) << " " << get<3>(x);
      cout << "\n";
    }

  }
  return 0;
}
