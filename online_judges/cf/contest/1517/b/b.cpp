/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: mia_ortizma
 * Time: 2021-04-23 09:35:01
**/

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int MAX_N = 110;
int vec[MAX_N][MAX_N];
int run[MAX_N][MAX_N];
int L[MAX_N];
int R[MAX_N];

int main()
{
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  int T;
  cin >> T;
  while (T--) {
    int N, M;
    cin >> N >> M;

    priority_queue<pii, vector<pii>, greater<pii> > mnheap;
    for (int i = 0; i < N; ++i) {
      for (int j = 0; j < M; ++j) {
        cin >> vec[i][j];
      }
      sort(vec[i], vec[i] + M);
      L[i] = 0;
      R[i] = M - 1;
      mnheap.push({ vec[i][0], i });
    }
    int ans = 0;
    for (int i = 0; i < M; ++i) {
      pii cur = mnheap.top(); mnheap.pop();
      int val = cur.first;
      int pos = cur.second;
      L[pos]++;
      mnheap.push({ vec[pos][L[pos]], pos });

      for (int j = 0; j < N; ++j) {
        if (j == pos) {
          run[j][i] = val;

        }
        else {
          run[j][i] = vec[j][R[j]];
          R[j]--;
        }
      }
    }
    for (int i = 0; i < N; ++i) {
      for (int j = 0; j < M; ++j) {
        cout << run[i][j] << " ";
      }
      cout << "\n";
    }
  }
  return 0;
}
